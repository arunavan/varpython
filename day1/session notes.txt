
function:
=================  function1.py
def sum():
    a=10
    return a*a
print(sum())    


conditional statements:
=========================  ifdemo.py
a=10
b=20
if(a>b):
    print("a is big")
else:
    print( "b is big")


====================== ifdemo2.py
a = int (input("Enter a: "));    
b = int (input("Enter b: "));    
c = int (input("Enter c: "));    
if a>b and a>c:    
   print (" a is largest");    
if b>a and b>c:    
    print (" b is largest");    
if c>a and c>b:    
   print (" c is largest");    


============================= ifdemo3.py

age = int (input("Enter your age: "))    
if age>=18:    
    print("You are eligible to vote !!");    
else:    
    print("Sorry! you have to wait !!");    

===================================

For loop:
=========================  fordemo1.py
numbers = [4, 2, 6, 7, 3, 5, 8, 10, 6, 1, 9, 2]  

square = 0  
  
# Creating an empty list  
squares = []  
  
# Creating a for loop  
for value in numbers:  
    square = value ** 2  
    squares.append(square)  
print("The list of squares is", squares)  

====================================== fordemo2.py
string = "Python Loop"  
# Initiating a loop  
for s in a string:  
    # giving a condition in if block  
    if s == "o":  
        print("If block")  
    # if condition is not satisfied then else block will be executed  
    else:  
        print(s) 
========================================= rangedemo.py

print(range(15))  
  
print(list(range(15)))  
  
print(list(range(4, 9)))  
  
print(list(range(5, 25, 4)))  
====================================== whiledemo.py
counter = 0  
# Initiating the loop  
while counter < 10:   
    counter = counter + 3  
    print("Python Loops")  
====================================
collections: list
=======================  listdemo.py
list1  = [1, "hi", "Python", 2]    
print(type(list1))  
print (list1)  
print (list1[3:])  
print (list1[0:2])   
print (list1 + list1)  
print (list1 * 3)  

Dictionery:
===================  dictioneryapp.py

d = {1:'Jimmy', 2:'Alex', 3:'john', 4:'mike'}     
print (d)  
print("1st name is "+d[1])   
print("2nd name is "+ d[4])    
print (d.keys())    
print (d.values()) 

Boolean
=============== booleantest.py

print(type(True))  
print(type(False))  
print(false)  

Set:
===============

set1 = set()  
set2 = {'James', 2, 3,'Python'}  
print(set2)  
set2.add(10)  
print(set2)  
set2.remove(2)  
print(set2)
  
OOPs:
==================
class Emp(object):
    def __init__(self,name):
        self.name=name
    def disp(self):
        print(self.name)
e = Emp("Ram")
e.disp()

Opps:  (__init__  -> constructor , self is like this )

=============
class Person(object):
    def __init__(self, name, idnumber):
        self.name = name
        self.idnumber = idnumber
    def display(self):
        print(self.name)
        print(self.idnumber)
    def details(self):
        print("My name is {}".format(self.name))
        print("IdNumber: {}".format(self.idnumber))
class Employee(Person):
    def __init__(self, name, idnumber, salary, post):
        self.salary = salary
        self.post = post
        Person.__init__(self, name, idnumber)
    def details(self):
        print("My name is {}".format(self.name))
        print("IdNumber: {}".format(self.idnumber))
        print("Post: {}".format(self.post))
a = Employee('Rahul', 886012, 200000, "Intern")
a.display()
a.details()

